"""Added tables (Winners, PlayerStatus, Crads, Hands, startLocations, WeaponLocations), changed original PlayerStatus table to PlayerInfoss, add properties (isEliminated - PlayerInfos, isSecret - Paths), added defaults and not nullable to columns, added some todo actions)

Revision ID: 6282bae7ccbc
Revises: 63d615902ad2
Create Date: 2023-11-10 19:56:36.256368

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6282bae7ccbc'
down_revision = '63d615902ad2'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('PlayerStatus', schema='cs') as batch_op:
        batch_op.drop_constraint("PlayerStatus_characterId_fkey", type_='foreignkey')
        batch_op.drop_constraint("PlayerStatus_gameId_fkey", type_='foreignkey')
        batch_op.drop_constraint("PlayerStatus_locationId_fkey", type_='foreignkey')
        batch_op.drop_constraint("PlayerStatus_playerId_fkey", type_='foreignkey')
        

    # drop foreign key relationships
    with op.batch_alter_table('Guesses', schema='cs') as batch_op:
        batch_op.drop_constraint('Guesses_characterId_fkey', type_='foreignkey')
        batch_op.drop_constraint('Guesses_weaponId_fkey', type_='foreignkey')
        batch_op.drop_constraint('Guesses_gameId_fkey', type_='foreignkey')
        batch_op.drop_constraint('Guesses_playerId_fkey', type_='foreignkey')
        batch_op.drop_constraint('Guesses_roomId_fkey', type_='foreignkey')

    with op.batch_alter_table('Solutions', schema='cs') as batch_op:
        batch_op.drop_constraint('Solutions_characterId_fkey', type_='foreignkey')
        batch_op.drop_constraint('Solutions_gameId_fkey', type_='foreignkey')
        batch_op.drop_constraint('Solutions_roomId_fkey', type_='foreignkey')
        batch_op.drop_constraint('Solutions_weaponId_fkey', type_='foreignkey')

    with op.batch_alter_table('Paths', schema='cs') as batch_op:
        batch_op.drop_constraint('Paths_locationId1_fkey', type_='foreignkey')
        batch_op.drop_constraint('Paths_locationId2_fkey', type_='foreignkey')

    with op.batch_alter_table('PlayerOrder', schema='cs') as batch_op:
        batch_op.drop_constraint('PlayerOrder_gameId_fkey', type_='foreignkey')
        batch_op.drop_constraint('PlayerOrder_playerId_fkey', type_='foreignkey')

    with op.batch_alter_table('Users', schema='cs') as batch_op:
        batch_op.drop_constraint('Users_username_key', type_='unique')

    with op.batch_alter_table('ActiveGames', schema='cs') as batch_op:
        batch_op.drop_constraint('ActiveGames_currentPlayer_fkey', type_='foreignkey')
        batch_op.drop_constraint('ActiveGames_gameStatus_fkey', type_='foreignkey')

    with op.batch_alter_table('Hand', schema='cs') as batch_op:
        batch_op.drop_constraint('Hand_cardId_fkey', type_='foreignkey')
        batch_op.drop_constraint("Hand_playerStatusId_fkey", type_='foreignkey')

    with op.batch_alter_table('PlayerLocations', schema='cs') as batch_op:
        batch_op.drop_constraint("PlayerLocations_characterId_fkey", type_='foreignkey')
        batch_op.drop_constraint("PlayerLocations_gameId_fkey", type_='foreignkey')
        batch_op.drop_constraint("PlayerLocations_locationId_fkey", type_='foreignkey')
        batch_op.drop_constraint("PlayerLocations_playerId_fkey", type_='foreignkey')

    with op.batch_alter_table('Card', schema='cs') as batch_op:
        batch_op.drop_constraint("Card_weaponId_fkey", type_='foreignkey')
        batch_op.drop_constraint("Card_roomId_fkey", type_='foreignkey')
        batch_op.drop_constraint("Card_characterId_fkey", type_='foreignkey')

    # update column types
    with op.batch_alter_table('Guesses', schema='cs') as batch_op:
        batch_op.alter_column('characterId',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('gameId',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('weaponId',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('playerId',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('Paths', schema='cs') as batch_op:
        batch_op.alter_column('locationId1',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('locationId2',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('PlayerOrder', schema='cs') as batch_op:
        batch_op.alter_column('gameId',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('playerId',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('turn',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('Solutions', schema='cs') as batch_op:
        batch_op.alter_column('characterId',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('gameId',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('weaponId',
               existing_type=sa.INTEGER(),
               nullable=False)
        
    # add and drop columns
    with op.batch_alter_table('Guesses', schema='cs') as batch_op:
        batch_op.add_column(sa.Column('locationId', sa.Integer(), nullable=False))
        batch_op.drop_column('roomId')

    with op.batch_alter_table('Paths', schema='cs') as batch_op:
        batch_op.add_column(sa.Column('isSecret', sa.Boolean(), nullable=True))

    with op.batch_alter_table('PlayerOrder', schema='cs') as batch_op:
        batch_op.add_column(sa.Column('activeTurn', sa.Boolean(), nullable=False))

    with op.batch_alter_table('Solutions', schema='cs') as batch_op:
        batch_op.add_column(sa.Column('locationId', sa.Integer(), nullable=False))
        batch_op.drop_column('roomId')

    with op.batch_alter_table('Users', schema='cs') as batch_op:
        batch_op.add_column(sa.Column('playerCode', sa.String(length=6), nullable=True))
        batch_op.add_column(sa.Column('playerStatus', sa.Integer(), nullable=True))
        batch_op.drop_column('gameCode')

    with op.batch_alter_table('PlayerStatus', schema='cs') as batch_op:
        batch_op.drop_column('locationId')
        batch_op.drop_column('playerId')
        batch_op.drop_column('gameId')
        batch_op.drop_column('characterId')
        batch_op.add_column(sa.Column('status', sa.String(length=20), nullable=False))


    # drop tables
    op.drop_table('Hand', schema='cs')
    op.drop_table('ActivePlayers', schema='cs')
    op.drop_table('ActiveGames', schema='cs')
    op.drop_table('PlayerLocations', schema='cs')
    op.drop_table('Card', schema='cs')
    op.drop_table('Rooms', schema='cs')

    # create new tables
    op.create_table('Cards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('locationId', sa.Integer(), nullable=True),
    sa.Column('characterId', sa.Integer(), nullable=True),
    sa.Column('weaponId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['characterId'], ['cs.Characters.id'], ),
    sa.ForeignKeyConstraint(['locationId'], ['cs.Locations.id'], ),
    sa.ForeignKeyConstraint(['weaponId'], ['cs.Weapons.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='cs'
    )
    op.create_table('Games',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('gameStatus', sa.Integer(), nullable=True),
    sa.Column('playerCount', sa.Integer(), nullable=False),
    sa.Column('gameCode', sa.String(length=6), nullable=False),
    sa.ForeignKeyConstraint(['gameStatus'], ['cs.GameStatus.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='cs'
    )
    op.create_table('PlayerInfos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('gameId', sa.Integer(), nullable=False),
    sa.Column('characterId', sa.Integer(), nullable=False),
    sa.Column('locationId', sa.Integer(), nullable=False),
    sa.Column('isEliminated', sa.Boolean(), nullable=False),
    sa.Column('playerId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['characterId'], ['cs.Characters.id'], ),
    sa.ForeignKeyConstraint(['gameId'], ['cs.Games.id'], ),
    sa.ForeignKeyConstraint(['locationId'], ['cs.Locations.id'], ),
    sa.ForeignKeyConstraint(['playerId'], ['cs.Users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='cs'
    )
    op.create_table('WeaponLocations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('locationId', sa.Integer(), nullable=False),
    sa.Column('gameId', sa.Integer(), nullable=False),
    sa.Column('weapondId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['gameId'], ['cs.Games.id'], ),
    sa.ForeignKeyConstraint(['locationId'], ['cs.Locations.id'], ),
    sa.ForeignKeyConstraint(['weapondId'], ['cs.Weapons.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='cs'
    )
    op.create_table('Winners',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('playerId', sa.Integer(), nullable=False),
    sa.Column('gameId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['gameId'], ['cs.Games.id'], ),
    sa.ForeignKeyConstraint(['playerId'], ['cs.Users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='cs'
    )
    op.create_table('Hands',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cardId', sa.Integer(), nullable=False),
    sa.Column('playerInfo', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['cardId'], ['cs.Cards.id'], ),
    sa.ForeignKeyConstraint(['playerInfo'], ['cs.PlayerInfos.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='cs'
    )
    
    

    # add foreign keys
    with op.batch_alter_table('Guesses', schema='cs') as batch_op:
        batch_op.create_foreign_key(None, 'Locations', ['locationId'], ['id'], referent_schema='cs')
        batch_op.create_foreign_key(None, 'Games', ['gameId'], ['id'], referent_schema='cs')
        batch_op.create_foreign_key(None, 'Weapons', ['weaponId'], ['id'], referent_schema='cs')
        batch_op.create_foreign_key(None, 'Characters', ['characterId'], ['id'], referent_schema='cs')
        batch_op.create_foreign_key(None, 'Users', ['playerId'], ['id'], referent_schema='cs')

    with op.batch_alter_table('Paths', schema='cs') as batch_op:
        batch_op.create_foreign_key(None, 'Locations', ['locationId2'], ['id'], referent_schema='cs')
        batch_op.create_foreign_key(None, 'Locations', ['locationId1'], ['id'], referent_schema='cs')

    with op.batch_alter_table('PlayerOrder', schema='cs') as batch_op:
        batch_op.create_foreign_key(None, 'Games', ['gameId'], ['id'], referent_schema='cs')
        batch_op.create_foreign_key(None, 'Users', ['playerId'], ['id'], referent_schema='cs')

    with op.batch_alter_table('Solutions', schema='cs') as batch_op:
        batch_op.create_foreign_key(None, 'Locations', ['locationId'], ['id'], referent_schema='cs')
        batch_op.create_foreign_key(None, 'Weapons', ['weaponId'], ['id'], referent_schema='cs')
        batch_op.create_foreign_key(None, 'Characters', ['characterId'], ['id'], referent_schema='cs')
        batch_op.create_foreign_key(None, 'Games', ['gameId'], ['id'], referent_schema='cs')

    with op.batch_alter_table('Users', schema='cs') as batch_op:
        batch_op.create_foreign_key(None, 'PlayerStatus', ['playerStatus'], ['id'], referent_schema='cs')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('Users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('gameCode', sa.VARCHAR(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_unique_constraint('Users_username_key', ['username'])
        batch_op.drop_column('playerStatus')
        batch_op.drop_column('playerCode')

    with op.batch_alter_table('Solutions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('roomId', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('Solutions_weaponId_fkey', 'Weapons', ['weaponId'], ['id'])
        batch_op.create_foreign_key('Solutions_roomId_fkey', 'Rooms', ['roomId'], ['id'])
        batch_op.create_foreign_key('Solutions_gameId_fkey', 'ActiveGames', ['gameId'], ['id'])
        batch_op.create_foreign_key('Solutions_characterId_fkey', 'Characters', ['characterId'], ['id'])
        batch_op.alter_column('weaponId',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('gameId',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('characterId',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_column('locationId')

    with op.batch_alter_table('PlayerStatus', schema=None) as batch_op:
        batch_op.add_column(sa.Column('locationId', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('playerId', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('gameId', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('characterId', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key('PlayerStatus_gameId_fkey', 'ActiveGames', ['gameId'], ['id'])
        batch_op.create_foreign_key('PlayerStatus_characterId_fkey', 'Characters', ['characterId'], ['id'])
        batch_op.create_foreign_key('PlayerStatus_playerId_fkey', 'ActivePlayers', ['playerId'], ['id'])
        batch_op.create_foreign_key('PlayerStatus_locationId_fkey', 'Locations', ['locationId'], ['id'])
        batch_op.drop_column('status')

    with op.batch_alter_table('PlayerOrder', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('PlayerOrder_playerId_fkey', 'ActivePlayers', ['playerId'], ['id'])
        batch_op.create_foreign_key('PlayerOrder_gameId_fkey', 'ActiveGames', ['gameId'], ['id'])
        batch_op.alter_column('turn',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('playerId',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('gameId',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_column('activeTurn')

    with op.batch_alter_table('Paths', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('Paths_locationId2_fkey', 'Locations', ['locationId2'], ['id'])
        batch_op.create_foreign_key('Paths_locationId1_fkey', 'Locations', ['locationId1'], ['id'])
        batch_op.alter_column('locationId2',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('locationId1',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_column('isSecret')

    with op.batch_alter_table('Locations', schema=None) as batch_op:
        batch_op.alter_column('locationName',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.drop_column('isRoom')

    with op.batch_alter_table('Guesses', schema=None) as batch_op:
        batch_op.add_column(sa.Column('roomId', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('Guesses_roomId_fkey', 'Rooms', ['roomId'], ['id'])
        batch_op.create_foreign_key('Guesses_playerId_fkey', 'ActivePlayers', ['playerId'], ['id'])
        batch_op.create_foreign_key('Guesses_gameId_fkey', 'ActiveGames', ['gameId'], ['id'])
        batch_op.create_foreign_key('Guesses_weaponId_fkey', 'Weapons', ['weaponId'], ['id'])
        batch_op.create_foreign_key('Guesses_characterId_fkey', 'Characters', ['characterId'], ['id'])
        batch_op.alter_column('playerId',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('weaponId',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('gameId',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('characterId',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_column('locationId')

    with op.batch_alter_table('GameStatus', schema=None) as batch_op:
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(),
               nullable=True)

    with op.batch_alter_table('Characters', schema=None) as batch_op:
        batch_op.alter_column('character',
               existing_type=sa.VARCHAR(),
               nullable=True)

    op.create_table('PlayerLocations',
    sa.Column('gameId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('playerId', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('characterId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('locationId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['characterId'], ['Characters.id'], name='PlayerLocations_characterId_fkey'),
    sa.ForeignKeyConstraint(['gameId'], ['ActiveGames.id'], name='PlayerLocations_gameId_fkey'),
    sa.ForeignKeyConstraint(['locationId'], ['Locations.id'], name='PlayerLocations_locationId_fkey'),
    sa.ForeignKeyConstraint(['playerId'], ['ActivePlayers.id'], name='PlayerLocations_playerId_fkey'),
    sa.PrimaryKeyConstraint('gameId', 'playerId', name='PlayerLocations_pkey')
    )
    op.create_table('Rooms',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Rooms_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('roomName', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='Rooms_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('Card',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Card_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('weaponId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('roomId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('characterId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['characterId'], ['Characters.id'], name='Card_characterId_fkey'),
    sa.ForeignKeyConstraint(['roomId'], ['Rooms.id'], name='Card_roomId_fkey'),
    sa.ForeignKeyConstraint(['weaponId'], ['Weapons.id'], name='Card_weaponId_fkey'),
    sa.PrimaryKeyConstraint('id', name='Card_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('ActiveGames',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"ActiveGames_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('gameStatus', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('playerCount', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gameCode', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('currentPlayer', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['currentPlayer'], ['ActivePlayers.id'], name='ActiveGames_currentPlayer_fkey'),
    sa.ForeignKeyConstraint(['gameStatus'], ['GameStatus.id'], name='ActiveGames_gameStatus_fkey'),
    sa.PrimaryKeyConstraint('id', name='ActiveGames_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('ActivePlayers',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"ActivePlayers_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('playerName', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('playerCode', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='ActivePlayers_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('Hand',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Hand_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('cardId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('playerStatusId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['cardId'], ['Card.id'], name='Hand_cardId_fkey'),
    sa.ForeignKeyConstraint(['playerStatusId'], ['PlayerStatus.id'], name='Hand_playerStatusId_fkey'),
    sa.PrimaryKeyConstraint('id', name='Hand_pkey')
    )
    op.drop_table('Hands', schema='cs')
    op.drop_table('Winners', schema='cs')
    op.drop_table('WeaponLocations', schema='cs')
    op.drop_table('PlayerInfos', schema='cs')
    op.drop_table('Games', schema='cs')
    op.drop_table('Cards', schema='cs')
    # ### end Alembic commands ###
